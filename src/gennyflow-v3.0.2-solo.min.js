function gennyFlow(){console.log("gennyFlow started");const flowList=$('[gf="wrapper"]').find('[gf="capture"]');console.log("flowList:"+flowList);const flowSettings={format:{attribute:"format",variableName:"fileFormat",default:"png",type:"string"},quality:{attribute:"quality",variableName:"fileQuality",default:1,type:"number"},scale:{attribute:"scale",variableName:"fileScale",default:1,type:"number"},zipName:{attribute:"zip-name",variableName:"zipName",default:"images",type:"string"},disableSVGfix:{attribute:"disable-svg-fix",variableName:"disableSVGfix",default:!1,type:"boolean"},includeDateZip:{attribute:"include-date-zip",variableName:"includeDateZip",default:!0,type:"boolean"},includeScaleZip:{attribute:"include-scale-zip",variableName:"includeScaleZip",default:!0,type:"boolean"},includeDateImg:{attribute:"include-date-img",variableName:"includeDateImg",default:!1,type:"boolean"},includeScaleImg:{attribute:"include-scale-img",variableName:"includeScaleImg",default:!1,type:"boolean"}};console.log("flowSettings:"+flowSettings);const settings={};function convertToSlug(input){return input=(input=(input=input.toLowerCase()).replace(/[^a-z0-9_ -]/g,"")).replace(/\s+/g,"-"),console.log("Slug converted:"+input),input}if(Object.keys(flowSettings).forEach(settingKey=>{const setting=flowSettings[settingKey];let variableName=setting.variableName;const userValue=$(`[gf="${setting.attribute}-input"]`).val(),wrapperValue=$('[gf="wrapper"]').attr(`gf-${setting.attribute}`);let variableValue=userValue||wrapperValue||setting.default;settings[variableName]=variableValue,console.log(`\nVariable Name: ${variableName}\nVariable Value: ${variableValue}\n        `)}),!1===settings.disableSVGfix){console.log("start svg fix");const imgs=document.querySelectorAll('div[gf=wrapper] img[src$=".svg"]:not([gf=ignore])');for(let i=0;i<imgs.length;i++){let img,imgSrc=imgs[i].getAttribute("src");console.log("img: "+imgSrc)}var svgElements;imgs.forEach(img=>{img.classList.add("gf_img2svg"),console.log("gf_img2svg added")}),inlineSVG.init({svgSelector:"img.gf_img2svg",initClass:"js-inlinesvg"}),document.body.querySelectorAll("svg.gf_img2svg").forEach((function(item){item.setAttribute("width",item.getBoundingClientRect().width),item.setAttribute("height",item.getBoundingClientRect().height),console.log("svg width: "+item.getBoundingClientRect().width),console.log("svg height: "+item.getBoundingClientRect().height)}))}const ignoreElements=document.querySelectorAll('[gf="ignore"]');ignoreElements.forEach(element=>{element.setAttribute("data-html2canvas-ignore","true")});let date=String((new Date).getMonth()+1).padStart(2,"0")+String((new Date).getDate()).padStart(2,"0")+(new Date).getFullYear().toString().slice(-2);const jsZipInstance=new JSZip,storedFlowLabels=[];let zipScale=settings.includeScaleZip?`_@${settings.fileScale}x`:"",zipDate=settings.includeDateZip?`_${date}`:"",zipName,zipLabel=`${convertToSlug(settings.zipName)}${zipScale}${zipDate}.zip`;console.log("flowList: "+flowList.length),setTimeout((async function(){for(let i=0;i<flowList.length;i++){let item=flowList[i],flowID=i+1,itemSettings={};Object.keys(flowSettings).forEach(settingKey=>{const setting=flowSettings[settingKey];let itemAttributeValue=$(item).attr(`gf-${setting.attribute}`);itemAttributeValue&&(itemSettings[setting.variableName]=itemAttributeValue)});let finalFormat=itemSettings.fileFormat||settings.fileFormat,finalQuality=itemSettings.fileQuality||settings.fileQuality,finalScale=itemSettings.fileScale||settings.fileScale,includeScaleImg=itemSettings.includeScaleImg||settings.includeScaleImg,includeDateImg=itemSettings.includeDateImg||settings.includeDateImg,fileMime="jpg"===finalFormat?"image/jpeg":`image/${finalFormat}`;const slugFromHTMLunformatted=$(item).find('[gf="slug"]').html();let slugFromHTML=convertToSlug(slugFromHTMLunformatted),imgName=slugFromHTML||`img-${flowID}`,imgScale="";"true"===includeScaleImg&&(imgScale=`_@${finalScale}x`);let imgDate="";"true"===includeDateImg&&(imgDate=`_${date}x`);let fileLabel=`${imgName}${imgDate}${imgScale}.${finalFormat}`;storedFlowLabels.includes(fileLabel)&&(fileLabel=`${imgName}-${flowID}${imgDate}${imgScale}.${finalFormat}`),storedFlowLabels.push(fileLabel),html2canvas(item,{scale:finalScale,allowTaint:!0,useCORS:!0,backgroundColor:null}).then(async canvas=>{if(1===flowList.length)return void canvas.toBlob((function(blob){window.saveAs(blob,fileLabel)}),finalFormat,parseFloat(finalQuality));const flowDataURL=canvas.toDataURL(fileMime,parseFloat(finalQuality)),flowImg=document.createElement("img");flowImg.src=flowDataURL,jsZipInstance.file(fileLabel,flowImg.src.slice(flowImg.src.indexOf(",")+1),{base64:!0}),console.log("i="+i),console.log("flowList.length="+flowList.length),console.log("fileLabel="+fileLabel);let zipstring="";console.log("storedFlowLabels: "+storedFlowLabels.length),storedFlowLabels.length===flowList.length&&(console.log("i when generating zip: "+i),console.log("flowID when generating zip: "+flowID),jsZipInstance.generateAsync({type:"blob"},(function updateCallback(metadata){})).then(content=>{console.log("i when generating zip: "+i),saveAs(content,zipLabel)}).catch(err=>{console.log(err)}))}).catch(err=>{console.log(err)}),itemSettings={}}}),500)}$("[gf=trigger]").click(()=>gennyFlow());